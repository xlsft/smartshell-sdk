name: Check Version and Create Release

on:
  push:
    branches:
      - main

jobs:
  publish-on-new-version:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: 'Get Previous tag'
        id: get_tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
      
      - name: Read version from deno.jsonc
        id: read_version
        run: echo ::set-output name=version::$(jq -r '.version' deno.jsonc)
        
      - name: Compare version with latest tag
        id: compare_versions
        run: |
          if [ "${{ steps.read_version.outputs.version }}" != "${{ steps.get_tag.outputs.tag }}" ]; then
            echo "Version in jsr.json is different from latest tag"
            echo "Creating a new release..."
            echo "::set-output name=create_release::true"
          else
            echo "Version in jsr.json matches the latest tag"
            echo "::set-output name=create_release::false"
          fi

      - name: Create changelog text
        id: changelog
        if: steps.compare_versions.outputs.create_release == 'true'
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          exclude_types: other,docs,chore
      
      - name: Create release
        id: create_release
        if: steps.compare_versions.outputs.create_release == 'true'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.read_version.outputs.version }}
          release_name: smartshell-sdk@${{ steps.read_version.outputs.version }}
          body: |
            ${{ steps.changelog.outputs.changes }}

            ## Summary
            [smartshell-sdk@${{ steps.get_tag.outputs.tag }}...${{ steps.read_version.outputs.version }}](https://github.com/xlsft/smartshell-sdk/compare/${{ steps.get_tag.outputs.tag }}...${{ steps.read_version.outputs.version }})
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to JSR
        id: publish_to_jsr
        if: steps.compare_versions.outputs.create_release == 'true'
        run: |
          npx jsr publish --allow-slow-types

