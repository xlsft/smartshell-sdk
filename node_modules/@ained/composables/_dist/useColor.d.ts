/**
 * ## useColor
 * 
 * This function provides utilities for color manipulation and conversion between different color formats (hex, RGB, HSL). 
 * It includes methods to calculate luminance and contrast, as well as functions to modify hue, saturation, and lightness of colors.
 * Useful for theming, styling, and UI customization in web applications.
 * 
 * ```ts
* const color = useColor();
* 
* // Conversion methods
* const rgb = color.convert.hex.rgb('#ff5733'); // { r: 255, g: 87, b: 51 }
* const hsl = color.convert.hex.hsl('#ff5733'); // { h: 14, s: 100, l: 60 }
* 
* const hex = color.convert.rgb.hex({ r: 255, g: 87, b: 51 }); // '#ff5733'
* const hslFromRgb = color.convert.rgb.hsl({ r: 255, g: 87, b: 51 }); // { h: 14, s: 100, l: 60 }
* 
* const rgbFromHsl = color.convert.hsl.rgb({ h: 14, s: 100, l: 60 }); // { r: 255, g: 87, b: 51 }
* const hexFromHsl = color.convert.hsl.hex({ h: 14, s: 100, l: 60 }); // '#ff5733'
* 
* // Parameter methods
* const luminance = color.param.luminance('#ff5733'); // 0.35
* const contrast = color.param.contrast('#ff5733', '#ffffff'); // 3.0
* 
* // Modification methods
* const newHexHue = color.modify.hue('#ff5733', 30); // Adjusts hue by 30 degrees
* const newHexSaturation = color.modify.saturation('#ff5733', -20); // Decreases saturation by 20
* const newHexLightness = color.modify.lightness('#ff5733', 10); // Increases lightness by 10
* ```
* 
* @return {object} An object containing color conversion, parameter calculations, and modification methods.
*/ export declare const useColor: () => {
  convert: {
    hex: {
      rgb: (hex: string) => {
        r: number;
        g: number;
        b: number;
      };
      hsl: (hex: string) => {
        h: number;
        s: number;
        l: number;
      };
    };
    rgb: {
      hex: (rgb: {
        r: number;
        g: number;
        b: number;
      }) => string;
      hsl: (rgb: {
        r: number;
        g: number;
        b: number;
      }) => {
        h: number;
        s: number;
        l: number;
      };
    };
    hsl: {
      hex: (hsl: {
        h: number;
        s: number;
        l: number;
      }) => string;
      rgb: (hsl: {
        h: number;
        s: number;
        l: number;
      }) => {
        r: number;
        g: number;
        b: number;
      };
    };
  };
  param: {
    luminance: (hex: string) => number;
    contrast: (f: string, b: string) => number;
  };
  modify: {
    hue: {
      add: (hex: string, add: number) => string;
      set: (hex: string, set: number) => string;
    };
    saturation: {
      add: (hex: string, add: number) => string;
      set: (hex: string, set: number) => string;
    };
    lightness: {
      add: (hex: string, add: number) => string;
      set: (hex: string, set: number) => string;
    };
  };
};
//# sourceMappingURL=useColor.d.ts.map