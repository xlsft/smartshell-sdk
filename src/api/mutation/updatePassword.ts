// deno-lint-ignore-file no-unused-vars ban-unused-ignore no-explicit-any
import type { ShellSdkContext } from "../../types/sdk.ts"
import type { Me, UpdatePasswordInput } from "../../types/types.ts"
import { key } from "../../utils/key.ts"

export type InputType = { input: UpdatePasswordInput }
export type ResponseType = Me

const module = async <Input extends InputType, Response extends ResponseType>(
    ctx: ShellSdkContext,
    props: Input,
): Promise<Response> => {
    return await ctx.request(
        "mutation",
        "updatePassword",
        [
            "id",
            "uuid",
            key("creator", [
                "id",
                "uuid",
                key("group", ["uuid", "title", "user_count", "discount", "created_at"]),
                "login",
                "nickname",
                "phone",
                "email",
                "phone_suffix",
                "dob",
                "country_code",
                key("roles", ["id", "alias", "title", "description", "is_service", "priority"]),
                "first_name",
                "last_name",
                "middle_name",
                "deposit",
                "bonus",
                "last_client_activity",
                "last_worker_activity",
                key("last_comment", [
                    "id",
                    "entity_id",
                    "text",
                    "created_at",
                    "deleted_at",
                    "data",
                    "request_contact",
                    "request_contact_info",
                    "is_important",
                ]),
                "user_discount",
                "created_at",
                "updated_at",
                "disabled_at",
                "banned_at",
                "total_hours",
                key("pausable_sessions", ["id", "duration", "elapsed", "available", "created_at", "expires_at"]),
                "city",
                "avatar_url",
                key("news_consent", ["isGiven", "givenAt", "revokedAt"]),
                "telegram_link",
                "discord_link",
                "steam_link",
                "vk_link",
                "is_private",
                "premium",
                "unverified",
                "lead_source",
                key("discounts", ["value"]),
                "favorite_club",
            ]),
            "login",
            "nickname",
            "phone",
            "email",
            "dob",
            "first_name",
            "last_name",
            "middle_name",
            "deposit",
            "bonus",
            "user_discount",
            "group_discount",
            "last_client_activity",
            "last_worker_activity",
            "created_at",
            "updated_at",
            "banned_at",
            key("roles", [
                "id",
                "alias",
                "title",
                "description",
                "is_service",
                "priority",
                key("permissions", ["id", "alias", "title", "description"]),
            ]),
            key("permissions", ["id", "alias", "title", "description"]),
            key("pausable_sessions", [
                "id",
                key("tariff", [
                    "id",
                    "title",
                    "duration",
                    "use_global_discounts",
                    "has_fixed_finish_time",
                    "created_at",
                    "is_active",
                    "per_minute",
                    "show_in_shell",
                    "show_in_billing",
                    "pausable",
                    "lifetime",
                    "ean",
                    "highlighted",
                    "description",
                    "sort",
                    "is_tracked",
                    "disable_sale_receipt_printing",
                    "online_booking_enabled",
                    "use_on_holidays",
                ]),
                "duration",
                key("host_group", ["id", "title", "created_at", "updated_at", "priority"]),
                "elapsed",
                "available",
                "created_at",
                "expires_at",
            ]),
            "age",
            "is_owner",
            key("achievements", [
                key("single", ["id", "has", "name", "icon_url", "progress"]),
                key("continuous", ["id", "has", "name", "icon_url", "progress"]),
            ]),
            "avatar_url",
            key("news_consent", ["isGiven", "givenAt", "revokedAt"]),
            "is_private",
            "unverified",
            "needs_password_change",
            "lead_source",
        ],
        { ...(props as any) },
    )
}

export default module<InputType, ResponseType>
